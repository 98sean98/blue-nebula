{"version":3,"sources":["styles/colors.js","config/environment.ts","components/layer/ApolloLayer.tsx","assets/images/robot.png","components/shared/interface/ComingSoonPlaceholder.tsx","pages/HomePage.tsx","utilities/functions/combineClassNames.ts","components/shared/actionable/LabelledInput.tsx","components/auth/CredentialsInput.tsx","pages/AuthPage.tsx","navigation/RootNavigation.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","primary","100","200","300","400","500","700","800","900","success","600","info","warning","danger","main","process","serverUrl","auth","graphql","uri","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","mutate","ApolloLayer","children","useState","client","setClient","useEffect","link","createHttpLink","credentials","cache","InMemoryCache","newClient","ApolloClient","console","log","ComingSoonPlaceholder","props","src","robot","alt","className","HomePage","combineClassNames","className1","className2","LabelledInput","labelText","labelProps","inputProps","htmlFor","id","CredentialsInput","handleSubmit","username","password","onClick","AuthPage","color","colors","RootNavigation","exact","path","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f69a3ed2.chunk.js","sourcesContent":["const colors = {\n  primary: {\n    100: '#D6E4FF',\n    200: '#ADC8FF',\n    300: '#84A9FF',\n    400: '#6690FF',\n    500: '#3366FF',\n    700: '#1939B7',\n    800: '#102693',\n    900: '#091A7A',\n  },\n  success: {\n    100: '#CAFDD8',\n    200: '#97FBBC',\n    300: '#62F5A7',\n    400: '#3BECA0',\n    500: '#00E096',\n    600: '#00C093',\n    700: '#00A18B',\n    800: '#00817D',\n    900: '#00646B',\n  },\n  info: {\n    100: '#CCF5FF',\n    200: '#99E6FF',\n    300: '#66D0FF',\n    400: '#3FBAFF',\n    500: '#0095FF',\n    600: '#0073DB',\n    700: '#0056B7',\n    800: '#003C93',\n    900: '#002B7A',\n  },\n  warning: {\n    100: '#FFF6CD',\n    200: '#FFEB9B',\n    300: '#FFDD69',\n    400: '#FFCF43',\n    500: '#FFB805',\n    600: '#DB9703',\n    700: '#B77902',\n    800: '#935D01',\n    900: '#7A4900',\n  },\n  danger: {\n    100: '#FFDCD8',\n    200: '#FFB3B1',\n    300: '#FF8A93',\n    400: '#FF6D86',\n    500: '#FF3D71',\n    600: '#DB2C6C',\n    700: '#B71E65',\n    800: '#93135B',\n    900: '#7A0B54',\n  },\n};\n\nmodule.exports = colors;\n","const main = process.env.REACT_APP_SERVER_URL;\n\nexport const serverUrl = {\n  main,\n  auth: `${main}/auth`,\n  graphql: `${main}/graphql`,\n};\n","import React, { FC, useEffect, useState } from 'react';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  DefaultOptions,\n  InMemoryCache,\n  NormalizedCacheObject,\n} from '@apollo/client';\n\nimport { serverUrl } from 'config/environment';\n\nconst uri = serverUrl.graphql;\n\nconst defaultOptions: DefaultOptions = {\n  watchQuery: {\n    fetchPolicy: 'cache-and-network',\n    errorPolicy: 'ignore',\n  },\n  query: {\n    fetchPolicy: 'network-only',\n    errorPolicy: 'all',\n  },\n  mutate: {\n    errorPolicy: 'all',\n  },\n};\n\nexport const ApolloLayer: FC = ({ children }) => {\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>();\n\n  useEffect(() => {\n    // setup apollo client\n    const link = createHttpLink({\n      uri,\n      credentials: 'include',\n    });\n\n    const cache = new InMemoryCache();\n\n    const newClient = new ApolloClient({\n      cache,\n      link,\n      defaultOptions,\n    });\n\n    setClient(newClient);\n    console.log('apollo client is loaded!');\n  }, []);\n\n  return (\n    <>\n      {typeof client !== 'undefined' ? (\n        <ApolloProvider client={client}>{children}</ApolloProvider>\n      ) : null}\n    </>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/robot.c78c2b88.png\";","import React, { FC, HTMLAttributes } from 'react';\n\nimport { robot } from 'assets/images';\n\nexport const ComingSoonPlaceholder: FC<HTMLAttributes<HTMLDivElement>> = ({\n  ...props\n}) => (\n  <div {...props}>\n    <img src={robot} alt={'robot'} className={'w-40 h-40'} />\n    <div className={'mt-3 flex flex-col items-center'}>\n      <h1 className={'text-3xl'}>Blue Nebula</h1>\n      <h3 className={'mt-2 text-xl'}>Coming Soon</h3>\n    </div>\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport { ComingSoonPlaceholder } from 'components/shared/interface';\n\nexport const HomePage: FC = () => {\n  return (\n    <div\n      className={'w-screen h-screen flex flex-col justify-center items-center'}>\n      <ComingSoonPlaceholder />\n    </div>\n  );\n};\n","export const combineClassNames = (\n  className1: string,\n  className2?: string,\n): string => `${className1} ${className2 ?? ''}`;\n","import React, { FC, HTMLAttributes } from 'react';\nimport { combineClassNames } from '../../../utilities/functions';\n\ninterface LabelledInputProps extends HTMLAttributes<HTMLDivElement> {\n  labelText: string;\n  labelProps?: HTMLAttributes<HTMLLabelElement>;\n  inputProps?: HTMLAttributes<HTMLInputElement>;\n}\n\nexport const LabelledInput: FC<LabelledInputProps> = ({\n  labelText,\n  labelProps,\n  inputProps,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      className={combineClassNames('flex flex-col', props?.className)}>\n      <label htmlFor={labelText} {...labelProps}>\n        {labelText}\n      </label>\n      <input id={labelText} {...inputProps} />\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes, useState } from 'react';\nimport { combineClassNames } from '../../utilities/functions';\nimport { LabelledInput } from '../shared/actionable';\n\ntype Credentials = {\n  username: string;\n  password: string;\n};\n\ninterface CredentialsInputProps extends HTMLAttributes<HTMLFormElement> {\n  handleSubmit: (credentials: Credentials) => void;\n}\n\nexport const CredentialsInput: FC<CredentialsInputProps> = ({\n  handleSubmit,\n  ...props\n}) => {\n  const [credentials] = useState<Credentials>({\n    username: '',\n    password: '',\n  });\n\n  const onButtonClick = () => handleSubmit(credentials);\n\n  return (\n    <form\n      {...props}\n      className={combineClassNames('flex flex-col', props.className)}>\n      <LabelledInput\n        labelText={'Username'}\n        inputProps={{ className: 'border border-gray-200 rounded p-1' }}\n        className={'mt-2'}\n      />\n      <LabelledInput\n        labelText={'Password'}\n        inputProps={{ className: 'border border-gray-200 rounded p-1' }}\n        className={'mt-2'}\n      />\n\n      <button className={'mt-4 btn btn-primary'} onClick={onButtonClick}>\n        Login\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { AlertCircle } from 'react-feather';\n\nimport { CredentialsInput } from 'components/auth';\n\nimport colors from 'styles/colors';\n\nexport const AuthPage = () => {\n  return (\n    <div\n      className={'w-screen h-screen flex flex-col justify-center items-center'}>\n      <div className={'w-full max-w-md m-4'}>\n        <div className={'flex space-x-2'}>\n          <AlertCircle color={colors.warning['500']} />\n          <p className={'text-lg'}>Please login to use blue nebula services</p>\n        </div>\n        <div className={'mt-6'}>\n          <CredentialsInput\n            handleSubmit={(credentials) => console.log(credentials)}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { AuthPage, HomePage } from 'pages';\n\nexport const RootNavigation: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={'/auth'}>\n          <AuthPage />\n        </Route>\n        <Route exact path={'/'}>\n          <HomePage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react';\n\nimport { ApolloLayer } from 'components/layer';\n\nimport { RootNavigation } from 'navigation/RootNavigation';\n\nfunction App() {\n  return (\n    <ApolloLayer>\n      <RootNavigation />\n    </ApolloLayer>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}