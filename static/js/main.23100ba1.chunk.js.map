{"version":3,"sources":["config/environment.ts","utilities/context/AuthContext.ts","utilities/hooks/useAuthContext.ts","utilities/functions/combineClassNames.ts","utilities/functions/tokenStorage.ts","components/layer/ApolloLayer.tsx","api/auth/login.ts","api/auth/logout.ts","api/auth/checkIsAuthenticated.ts","components/layer/AuthLayer.tsx","api/graphql/user.ts","components/layer/UserLayer.tsx","assets/images/robot.png","components/shared/interface/nav/NavBar.tsx","components/shared/interface/nav/PageContainerWithNavBar.tsx","components/shared/interface/ComingSoonPlaceholder.tsx","pages/HomePage.tsx","components/shared/actionable/LabelledInput.tsx","components/auth/CredentialsInput.tsx","pages/AuthPage.tsx","pages/NotFoundPage.tsx","navigation/RootNavigation.tsx","App.tsx","reportWebVitals.ts","index.tsx","styles/colors.js"],"names":["main","process","serverUrl","auth","graphql","initialAuthContext","isAuthenticated","setIsAuthenticated","user","undefined","setUser","AuthContext","createContext","useAuthContext","useContext","combineClassNames","className1","className2","storageKey","getTokenFromStorage","localStorage","getItem","setTokenIntoStorage","token","setItem","removeTokenFromStorage","removeItem","uri","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","mutate","ApolloLayer","children","useState","client","setClient","authorizationToken","useMemo","useEffect","headers","authorization","link","createHttpLink","credentials","cache","InMemoryCache","persistCache","storage","SessionStorageWrapper","window","sessionStorage","then","newClient","ApolloClient","console","log","catch","url","login","a","axios","post","response","data","logout","checkIsAuthenticated","authenticationToken","get","AuthLayer","Provider","value","GET_ME","gql","UserLayer","useLazyQuery","getMe","me","__typename","NavBar","props","history","useHistory","onLogoutButtonClick","Error","alert","className","onClick","push","src","robot","alt","to","PageContainerWithNavBar","overridingClassName","ComingSoonPlaceholder","HomePage","LabelledInput","labelText","labelProps","inputProps","htmlFor","id","CredentialsInput","handleSubmit","username","password","setCredentials","getOnInputChangeFunction","key","event","currentCredentials","target","label","type","map","index","onChange","e","preventDefault","AuthPage","loginCredentials","replace","color","colors","warning","NotFoundPage","size","RootNavigation","exact","path","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById","module","exports","primary","100","200","300","400","500","700","800","900","success","600","info","danger"],"mappings":"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","file":"static/js/main.23100ba1.chunk.js","sourcesContent":["const main = process.env.REACT_APP_SERVER_URL;\n\nexport const serverUrl = {\n  main,\n  auth: `${main}/auth`,\n  graphql: `${main}/graphql`,\n};\n","import { createContext, Dispatch, SetStateAction } from 'react';\n\nimport { User } from 'models/auth';\n\ntype AuthContextType = {\n  isAuthenticated: boolean;\n  setIsAuthenticated: Dispatch<SetStateAction<boolean>>;\n  user: User | undefined;\n  setUser: Dispatch<SetStateAction<User | undefined>>;\n};\n\nconst initialAuthContext: AuthContextType = {\n  isAuthenticated: false,\n  setIsAuthenticated: () => {},\n  user: undefined,\n  setUser: () => {},\n};\n\nexport const AuthContext = createContext(initialAuthContext);\n","import { useContext } from 'react';\n\nimport { AuthContext } from 'utilities/context';\n\nexport const useAuthContext = () => useContext(AuthContext);\n","export const combineClassNames = (\n  className1: string,\n  className2?: string,\n): string => `${className1} ${className2 ?? ''}`;\n","const storageKey = 'authorizationToken';\n\nexport const getTokenFromStorage = (): string | null =>\n  localStorage.getItem(storageKey);\n\nexport const setTokenIntoStorage = (token: string): void =>\n  localStorage.setItem(storageKey, token);\n\nexport const removeTokenFromStorage = (): void =>\n  localStorage.removeItem(storageKey);\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  DefaultOptions,\n  InMemoryCache,\n  NormalizedCacheObject,\n} from '@apollo/client';\nimport { persistCache, SessionStorageWrapper } from 'apollo3-cache-persist';\n\nimport { serverUrl } from 'config/environment';\n\nimport { useAuthContext } from 'utilities/hooks';\nimport { getTokenFromStorage } from 'utilities/functions';\n\nconst uri = serverUrl.graphql;\n\nconst defaultOptions: DefaultOptions = {\n  watchQuery: {\n    fetchPolicy: 'cache-and-network',\n    errorPolicy: 'ignore',\n  },\n  query: {\n    fetchPolicy: 'network-only',\n    errorPolicy: 'all',\n  },\n  mutate: {\n    errorPolicy: 'all',\n  },\n};\n\nexport const ApolloLayer: FC = ({ children }) => {\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>();\n\n  const { isAuthenticated } = useAuthContext();\n\n  const authorizationToken: string | undefined = useMemo(() => {\n    if (isAuthenticated) return getTokenFromStorage() ?? undefined;\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    // setup apollo client\n    const headers =\n      typeof authorizationToken !== 'undefined'\n        ? {\n            authorization: authorizationToken,\n          }\n        : undefined;\n\n    const link = createHttpLink({\n      uri,\n      credentials: 'include',\n      headers,\n    });\n\n    const cache = new InMemoryCache();\n\n    persistCache({\n      cache,\n      storage: new SessionStorageWrapper(window.sessionStorage),\n    })\n      .then(() => {\n        const newClient = new ApolloClient({\n          cache,\n          link,\n          defaultOptions,\n          headers,\n        });\n\n        setClient(newClient);\n        console.log('apollo client is loaded!');\n      })\n      .catch(() => console.log('error setting up apollo cache persist'));\n  }, [authorizationToken]);\n\n  return (\n    <>\n      {typeof client !== 'undefined' ? (\n        <ApolloProvider client={client}>{children}</ApolloProvider>\n      ) : null}\n    </>\n  );\n};\n","import axios from 'axios';\n\nimport { serverUrl } from 'config/environment';\n\nimport { LoginCredentials } from 'models/auth';\n\nconst url = `${serverUrl.auth}/login`;\n\nexport const login = async (credentials: LoginCredentials): Promise<string> => {\n  const response = await axios.post(url, credentials);\n  return response.data;\n};\n","import axios from 'axios';\n\nimport { serverUrl } from 'config/environment';\n\nconst url = `${serverUrl.auth}/logout`;\n\nexport const logout = async (authorizationToken: string): Promise<void> => {\n  await axios.post(url, undefined, {\n    headers: { authorization: authorizationToken },\n  });\n};\n","import axios from 'axios';\n\nimport { serverUrl } from 'config/environment';\n\nconst url = `${serverUrl.auth}/isAuthenticated`;\n\nexport const checkIsAuthenticated = async (\n  authenticationToken: string,\n): Promise<void> => {\n  await axios.get(url, { headers: { authorization: authenticationToken } });\n};\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { User } from 'models/auth';\n\nimport { checkIsAuthenticated } from 'api/auth';\n\nimport { AuthContext } from 'utilities/context';\nimport {\n  getTokenFromStorage,\n  removeTokenFromStorage,\n} from 'utilities/functions';\n\nexport const AuthLayer: FC = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [user, setUser] = useState<User>();\n\n  // check if the token exists in the local storage, and validate it\n  useEffect(() => {\n    const token = getTokenFromStorage();\n    if (token !== null)\n      checkIsAuthenticated(token)\n        .then(() => setIsAuthenticated(true))\n        .catch(() => {\n          removeTokenFromStorage();\n          setIsAuthenticated(false);\n        });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ isAuthenticated, setIsAuthenticated, user, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { gql } from '@apollo/client';\n\nexport const GET_ME = gql`\n  query me {\n    me {\n      ... on User {\n        id\n        username\n        firstName\n        lastName\n      }\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\n\nimport { GET_ME } from 'api/graphql/user';\n\nimport { useAuthContext } from 'utilities/hooks';\n\nexport const UserLayer: FC = ({ children }) => {\n  const { isAuthenticated, setUser } = useAuthContext();\n\n  const [getMe, { data }] = useLazyQuery(GET_ME);\n\n  useEffect(() => {\n    if (isAuthenticated) getMe();\n    else setUser(undefined);\n  }, [isAuthenticated, setUser, getMe]);\n\n  useEffect(() => {\n    if (\n      typeof data !== 'undefined' &&\n      data.me !== null &&\n      data.me.__typename === 'User'\n    ) {\n      setUser(data.me);\n    }\n  }, [data, setUser]);\n\n  return <>{children}</>;\n};\n","export default __webpack_public_path__ + \"static/media/robot.c78c2b88.png\";","import React, { FC, HTMLAttributes } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { logout } from 'api/auth';\n\nimport {\n  combineClassNames,\n  getTokenFromStorage,\n  removeTokenFromStorage,\n} from 'utilities/functions';\nimport { useAuthContext } from 'utilities/hooks';\n\nimport { robot } from 'assets/images';\n\ninterface NavBarProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const NavBar: FC<NavBarProps> = ({ ...props }) => {\n  const history = useHistory();\n\n  const onBrandClick = () => history.push('/');\n\n  const { isAuthenticated, setIsAuthenticated } = useAuthContext();\n\n  const onLogoutButtonClick = async () => {\n    try {\n      const token = getTokenFromStorage();\n\n      if (token === null)\n        throw new Error(\n          'Token does not exist in the local storage. This is a no-op.',\n        );\n\n      await logout(token);\n\n      // remove token from storage, and set is authenticated state\n      removeTokenFromStorage();\n      setIsAuthenticated(false);\n    } catch (error) {\n      console.log(error);\n      alert('There was an error logging you out. Please try again.');\n    }\n  };\n\n  return (\n    <div\n      {...props}\n      className={combineClassNames(\n        'w-full h-10 md:h-12 lg:h-16 flex flex-row justify-between items-center px-4',\n        props?.className,\n      )}>\n      <div\n        className={'h-full flex flex-row items-center space-x-2 cursor-pointer'}\n        onClick={onBrandClick}>\n        <img src={robot} alt={'robot'} className={'h-full m-1'} />\n        <h1 className={'text-lg lg:text-2xl xl:text-3xl'}>Blue Nebula</h1>\n      </div>\n      <div>\n        {!isAuthenticated ? (\n          <Link className={'text-base'} to={'/auth'}>\n            Login\n          </Link>\n        ) : (\n          <Link className={'text-base'} to={'/'} onClick={onLogoutButtonClick}>\n            Logout\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\n\nimport { NavBar } from './NavBar';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface PageContainerWithNavBarProps extends HTMLAttributes<HTMLDivElement> {\n  overridingClassName?: string;\n}\n\nexport const PageContainerWithNavBar: FC<PageContainerWithNavBarProps> = ({\n  overridingClassName,\n  children,\n  ...props\n}) => (\n  <div\n    className={\n      overridingClassName ??\n      combineClassNames('container mx-auto', props?.className)\n    }>\n    <NavBar />\n    {children}\n  </div>\n);\n","import React, { FC, HTMLAttributes } from 'react';\n\nimport { combineClassNames } from 'utilities/functions';\n\nexport const ComingSoonPlaceholder: FC<HTMLAttributes<HTMLDivElement>> = ({\n  ...props\n}) => (\n  <div\n    {...props}\n    className={combineClassNames(\n      'text-center animate-bounce',\n      props?.className,\n    )}>\n    <h1 className={'mt-2 text-3xl'}>Coming Soon</h1>\n  </div>\n);\n","import React, { FC } from 'react';\n\nimport {\n  ComingSoonPlaceholder,\n  PageContainerWithNavBar,\n} from 'components/shared/interface';\n\nexport const HomePage: FC = () => {\n  return (\n    <PageContainerWithNavBar className={'h-screen flex flex-col'}>\n      <div className={'h-full flex flex-col justify-center items-center'}>\n        <ComingSoonPlaceholder />\n      </div>\n    </PageContainerWithNavBar>\n  );\n};\n","import React, {\n  FC,\n  HTMLAttributes,\n  InputHTMLAttributes,\n  LabelHTMLAttributes,\n} from 'react';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface LabelledInputProps extends HTMLAttributes<HTMLDivElement> {\n  labelText: string;\n  labelProps?: LabelHTMLAttributes<HTMLLabelElement>;\n  inputProps?: InputHTMLAttributes<HTMLInputElement>;\n}\n\nexport const LabelledInput: FC<LabelledInputProps> = ({\n  labelText,\n  labelProps,\n  inputProps,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      className={combineClassNames('flex flex-col', props?.className)}>\n      <label htmlFor={labelText} {...labelProps}>\n        {labelText}\n      </label>\n      <input id={labelText} {...inputProps} />\n    </div>\n  );\n};\n","import React, {\n  ChangeEventHandler,\n  ComponentProps,\n  FC,\n  HTMLAttributes,\n  MouseEventHandler,\n  useState,\n} from 'react';\n\nimport { LoginCredentials } from 'models/auth';\n\nimport { LabelledInput } from 'components/shared/actionable';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface CredentialsInputProps extends HTMLAttributes<HTMLFormElement> {\n  handleSubmit: (credentials: LoginCredentials) => void;\n}\n\nexport const CredentialsInput: FC<CredentialsInputProps> = ({\n  handleSubmit,\n  ...props\n}) => {\n  const [credentials, setCredentials] = useState<LoginCredentials>({\n    username: '',\n    password: '',\n  });\n\n  const onButtonClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    handleSubmit(credentials);\n  };\n\n  const fields: Array<{\n    label: string;\n    key: keyof LoginCredentials;\n    props?: Partial<ComponentProps<typeof LabelledInput>>;\n  }> = [\n    { label: 'Username', key: 'username' },\n    {\n      label: 'Password',\n      key: 'password',\n      props: { inputProps: { type: 'password' } },\n    },\n  ];\n\n  const getOnInputChangeFunction = (\n    key: keyof LoginCredentials,\n  ): ChangeEventHandler<HTMLInputElement> => (event) =>\n    setCredentials((currentCredentials) => ({\n      ...currentCredentials,\n      [key]: event.target.value,\n    }));\n\n  return (\n    <form\n      {...props}\n      className={combineClassNames('flex flex-col', props.className)}>\n      {fields.map(({ label, key, props }, index) => (\n        <LabelledInput\n          key={index}\n          labelText={label}\n          {...props}\n          inputProps={{\n            className: 'border border-gray-200 rounded p-1',\n            value: credentials[key],\n            onChange: getOnInputChangeFunction(key),\n            ...props?.inputProps,\n          }}\n          className={combineClassNames(\n            index !== 0 ? 'mt-2' : '',\n            props?.className,\n          )}\n        />\n      ))}\n\n      <button\n        className={'mt-4 btn btn-primary'}\n        onClick={onButtonClick}\n        type={'submit'}>\n        Login\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AlertCircle } from 'react-feather';\n\nimport { LoginCredentials } from 'models/auth';\n\nimport { login } from 'api/auth';\n\nimport { CredentialsInput } from 'components/auth';\n\nimport { useAuthContext } from 'utilities/hooks';\nimport { setTokenIntoStorage } from 'utilities/functions';\n\nimport { robot } from 'assets/images';\nimport colors from 'styles/colors';\n\nexport const AuthPage = () => {\n  const { setIsAuthenticated } = useAuthContext();\n\n  const history = useHistory();\n\n  const handleSubmit = async (loginCredentials: LoginCredentials) => {\n    try {\n      // send login request\n      const token = await login(loginCredentials);\n      // set token into local storage\n      setTokenIntoStorage(token);\n      // set auth context isAuthenticated state\n      setIsAuthenticated(true);\n      // redirect\n      history.replace('/');\n    } catch (error) {\n      console.log(error);\n      alert('An error occurred logging you in. Please try again.');\n    }\n  };\n\n  return (\n    <div\n      className={'w-screen h-screen flex flex-col justify-center items-center'}>\n      <div className={'w-full max-w-md p-4'}>\n        <div>\n          <img src={robot} alt={'robot'} className={'w-28 h-28 mx-auto'} />\n\n          <div className={'mt-2 flex justify-center items-center space-x-2'}>\n            <AlertCircle color={colors.warning['500']} />\n            <p className={'font-semibold text-center'}>\n              Please login to use blue nebula services\n            </p>\n          </div>\n        </div>\n\n        <div className={'mt-6'}>\n          <CredentialsInput handleSubmit={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AlertTriangle } from 'react-feather';\n\nimport colors from 'styles/colors';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <div\n      className={'w-screen h-screen flex flex-col justify-center items-center'}>\n      <AlertTriangle size={40} color={colors.warning['500']} />\n      <h1 className={'mt-2 text-3xl'}>404 Not Found</h1>\n      <button className={'mt-6 btn btn-primary'}>\n        <Link to={'/'}>Back to home page</Link>\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { AuthPage, HomePage, NotFoundPage } from 'pages';\n\nexport const RootNavigation: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={'/auth'}>\n          <AuthPage />\n        </Route>\n        <Route exact path={'/'}>\n          <HomePage />\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import React from 'react';\n\nimport { ApolloLayer, AuthLayer, UserLayer } from 'components/layer';\n\nimport { RootNavigation } from 'navigation/RootNavigation';\n\nfunction App() {\n  return (\n    <AuthLayer>\n      <ApolloLayer>\n        <UserLayer>\n          <RootNavigation />\n        </UserLayer>\n      </ApolloLayer>\n    </AuthLayer>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const colors = {\n  primary: {\n    100: '#D6E4FF',\n    200: '#ADC8FF',\n    300: '#84A9FF',\n    400: '#6690FF',\n    500: '#3366FF',\n    700: '#1939B7',\n    800: '#102693',\n    900: '#091A7A',\n  },\n  success: {\n    100: '#CAFDD8',\n    200: '#97FBBC',\n    300: '#62F5A7',\n    400: '#3BECA0',\n    500: '#00E096',\n    600: '#00C093',\n    700: '#00A18B',\n    800: '#00817D',\n    900: '#00646B',\n  },\n  info: {\n    100: '#CCF5FF',\n    200: '#99E6FF',\n    300: '#66D0FF',\n    400: '#3FBAFF',\n    500: '#0095FF',\n    600: '#0073DB',\n    700: '#0056B7',\n    800: '#003C93',\n    900: '#002B7A',\n  },\n  warning: {\n    100: '#FFF6CD',\n    200: '#FFEB9B',\n    300: '#FFDD69',\n    400: '#FFCF43',\n    500: '#FFB805',\n    600: '#DB9703',\n    700: '#B77902',\n    800: '#935D01',\n    900: '#7A4900',\n  },\n  danger: {\n    100: '#FFDCD8',\n    200: '#FFB3B1',\n    300: '#FF8A93',\n    400: '#FF6D86',\n    500: '#FF3D71',\n    600: '#DB2C6C',\n    700: '#B71E65',\n    800: '#93135B',\n    900: '#7A0B54',\n  },\n};\n\nmodule.exports = colors;\n"],"sourceRoot":""}