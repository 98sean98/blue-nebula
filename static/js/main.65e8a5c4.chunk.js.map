{"version":3,"sources":["config/environment.ts","utilities/context/AuthContext.ts","utilities/hooks/useAuthContext.ts","utilities/functions/combineClassNames.ts","utilities/functions/formatDate.ts","utilities/functions/tokenStorage.ts","components/layer/ApolloLayer.tsx","api/auth/login.ts","api/auth/logout.ts","api/auth/checkIsAuthenticated.ts","components/layer/AuthLayer.tsx","api/graphql/user.ts","components/layer/UserLayer.tsx","assets/images/robot.png","components/shared/interface/nav/NavBar.tsx","components/shared/interface/nav/PageContainerWithNavBar.tsx","api/graphql/microApp.ts","api/graphql/geocoding.ts","components/micro-app/UsageLog.tsx","components/micro-app/Usage.tsx","components/micro-app/MicroApps.tsx","pages/HomePage.tsx","components/shared/actionable/LabelledInput.tsx","components/auth/CredentialsInput.tsx","pages/AuthPage.tsx","pages/NotFoundPage.tsx","navigation/RootNavigation.tsx","styles/muiTheme.ts","App.tsx","reportWebVitals.ts","index.tsx","styles/colors.js"],"names":["main","process","serverUrl","auth","graphql","initialAuthContext","isAuthenticated","setIsAuthenticated","user","undefined","setUser","AuthContext","createContext","useAuthContext","useContext","combineClassNames","className1","className2","formatDate","date","moment","isValid","format","storageKey","getTokenFromStorage","localStorage","getItem","setTokenIntoStorage","token","setItem","removeTokenFromStorage","removeItem","uri","defaultOptions","watchQuery","fetchPolicy","errorPolicy","query","mutate","ApolloLayer","children","useState","client","setClient","authorizationToken","useMemo","useEffect","headers","authorization","link","createHttpLink","credentials","cache","InMemoryCache","persistCache","storage","SessionStorageWrapper","window","sessionStorage","then","newClient","ApolloClient","console","log","catch","url","login","a","axios","post","response","data","logout","checkIsAuthenticated","authenticationToken","get","AuthLayer","Provider","value","GET_ME","gql","GET_SIMPLE_USER","UserLayer","useLazyQuery","getMe","me","__typename","NavBar","props","history","useHistory","onLogoutButtonClick","Error","push","alert","className","onClick","src","robot","alt","to","PageContainerWithNavBar","overridingClassName","GET_ALL_MICRO_APPS_HEADERS","GET_MICRO_APP_DATA","GET_MICRO_APP_DATA_USAGE_LOGS","REVERSE_GEOCODING","UsageLog","microAppDataUsageLog","id","simpleUserId","microAppDataId","timestamp","locationLatitude","locationLongitude","useQuery","variables","simpleUserData","simpleUserError","error","microAppDataData","microAppDataError","fetchReverseGeocoding","reverseGeocodingData","reverseGeocodingError","latitude","longitude","simpleUser","microAppData","findUniqueMicroAppData","reverseGeocoding","renderRow","useCallback","key","name","version","label","tableColumns","field","headerName","flex","type","width","valueFormatter","params","sortable","Usage","microAppId","loading","usageLogs","microAppDataUsageLogs","tableRows","selectedRowId","setSelectedRowId","isModalOpen","setIsModalOpen","onRowClick","param","selectedUsageLog","find","pageSize","disableSelectionOnClick","rows","columns","Modal","open","onClose","style","minWidth","MicroApps","microAppsHeaders","microApps","selectedMicroAppId","setSelectedMicroAppId","selectedMicroApp","selectValue","microAppSelectorOptions","map","placeholder","options","onChange","selectedOption","HomePage","LabelledInput","labelText","labelProps","inputProps","htmlFor","CredentialsInput","handleSubmit","username","password","setCredentials","getOnInputChangeFunction","event","currentCredentials","target","index","e","preventDefault","AuthPage","loginCredentials","replace","color","colors","warning","NotFoundPage","size","RootNavigation","exact","path","muiTheme","createMuiTheme","palette","primary","light","dark","contrastText","secondary","basic","success","info","danger","App","ThemeProvider","theme","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","document","getElementById","module","exports","100","200","300","400","500","700","800","900","600"],"mappings":"oNAAMA,EAAOC,+BAEAC,EAAY,CACvBF,OACAG,KAAK,GAAD,OAAKH,EAAL,SACJI,QAAQ,GAAD,OAAKJ,EAAL,aCMHK,EAAsC,CAC1CC,iBAAiB,EACjBC,mBAAoB,aACpBC,UAAMC,EACNC,QAAS,cAGEC,EAAcC,wBAAcP,GCd5BQ,EAAiB,kBAAMC,qBAAWH,ICJlCI,EAAoB,SAC/BC,EACAC,GAF+B,gBAGjBD,EAHiB,mBAGHC,QAHG,IAGHA,IAAc,K,kBCD/BC,EAAa,SAACC,GACzB,OAAIC,IAAOD,GAAME,UACRD,IAAOD,GAAMG,OAAO,wBACtB,ICLHC,EAAa,qBAENC,EAAsB,kBACjCC,aAAaC,QAAQH,IAEVI,EAAsB,SAACC,GAAD,OACjCH,aAAaI,QAAQN,EAAYK,IAEtBE,EAAyB,kBACpCL,aAAaM,WAAWR,I,OCOpBS,EAAM9B,EAAUE,QAEhB6B,EAAiC,CACrCC,WAAY,CACVC,YAAa,oBACbC,YAAa,UAEfC,MAAO,CACLF,YAAa,cACbC,YAAa,OAEfE,OAAQ,CACNF,YAAa,QAIJG,EAAkB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACnBC,qBADmB,mBACxCC,EADwC,KAChCC,EADgC,KAGvCrC,EAAoBO,IAApBP,gBAEFsC,EAAyCC,mBAAQ,WAAO,IAAD,EAC3D,GAAIvC,EAAiB,iBAAOkB,WAAP,aAAgCf,IACpD,CAACH,IAqCJ,OAnCAwC,qBAAU,WAER,IAAMC,EAC0B,qBAAvBH,EACH,CACEI,cAAeJ,QAEjBnC,EAEAwC,EAAOC,yBAAe,CAC1BlB,MACAmB,YAAa,UACbJ,YAGIK,EAAQ,IAAIC,gBAElBC,YAAa,CACXF,QACAG,QAAS,IAAIC,IAAsBC,OAAOC,kBAEzCC,MAAK,WACJ,IAAMC,EAAY,IAAIC,eAAa,CACjCT,QACAH,OACAhB,iBACAc,YAGFJ,EAAUiB,GACVE,QAAQC,IAAI,+BAEbC,OAAM,kBAAMF,QAAQC,IAAI,8CAC1B,CAACnB,IAGF,mCACqB,qBAAXF,EACN,cAAC,iBAAD,CAAgBA,OAAQA,EAAxB,SAAiCF,IAC/B,Q,0CC1EJyB,EAAG,UAAM/D,EAAUC,KAAhB,UAEI+D,EAAK,uCAAG,WAAOf,GAAP,eAAAgB,EAAA,sEACIC,IAAMC,KAAKJ,EAAKd,GADpB,cACbmB,EADa,yBAEZA,EAASC,MAFG,2CAAH,sDCJZN,EAAG,UAAM/D,EAAUC,KAAhB,WAEIqE,EAAM,uCAAG,WAAO5B,GAAP,SAAAuB,EAAA,sEACdC,IAAMC,KAAKJ,OAAKxD,EAAW,CAC/BsC,QAAS,CAAEC,cAAeJ,KAFR,2CAAH,sDCFbqB,EAAG,UAAM/D,EAAUC,KAAhB,oBAEIsE,EAAoB,uCAAG,WAClCC,GADkC,SAAAP,EAAA,sEAG5BC,IAAMO,IAAIV,EAAK,CAAElB,QAAS,CAAEC,cAAe0B,KAHf,2CAAH,sDCMpBE,EAAgB,SAAC,GAAkB,IAAhBpC,EAAe,EAAfA,SAAe,EACCC,oBAAkB,GADnB,mBACtCnC,EADsC,KACrBC,EADqB,OAErBkC,qBAFqB,mBAEtCjC,EAFsC,KAEhCE,EAFgC,KAgB7C,OAXAoC,qBAAU,WACR,IAAMlB,EAAQJ,IACA,OAAVI,GACF6C,EAAqB7C,GAClB+B,MAAK,kBAAMpD,GAAmB,MAC9ByD,OAAM,WACLlC,IACAvB,GAAmB,QAExB,IAGD,cAACI,EAAYkE,SAAb,CACEC,MAAO,CAAExE,kBAAiBC,qBAAoBC,OAAME,WADtD,SAEG8B,K,QC7BMuC,EAASC,cAAH,oLAcNC,EAAkBD,cAAH,4NCTfE,EAAgB,SAAC,GAAkB,IAAhB1C,EAAe,EAAfA,SAAe,EACR3B,IAA7BP,EADqC,EACrCA,gBAAiBI,EADoB,EACpBA,QADoB,EAGnByE,uBAAaJ,GAHM,mBAGtCK,EAHsC,KAG7Bb,EAH6B,KAG7BA,KAiBhB,OAfAzB,qBAAU,WACJxC,EAAiB8E,IAChB1E,OAAQD,KACZ,CAACH,EAAiBI,EAAS0E,IAE9BtC,qBAAU,WAEU,qBAATyB,GACK,OAAZA,EAAKc,IACkB,SAAvBd,EAAKc,GAAGC,YAER5E,EAAQ6D,EAAKc,MAEd,CAACd,EAAM7D,IAEH,mCAAG8B,K,gCC3BG,MAA0B,kCCgB5B+C,GAA0B,SAAC,GAAkB,IAAbC,EAAY,oBACjDC,EAAUC,cADuC,EAKP7E,IAAxCP,EAL+C,EAK/CA,gBAAiBC,EAL8B,EAK9BA,mBAEnBoF,EAAmB,uCAAG,4BAAAxB,EAAA,kEAIV,QAFRvC,EAAQJ,KAFU,sBAKhB,IAAIoE,MACR,+DANoB,uBASlBpB,EAAO5C,GATW,OAYxBE,IACAvB,GAAmB,GAGnBkF,EAAQI,KAAK,KAhBW,kDAkBxB/B,QAAQC,IAAR,MACA+B,MAAM,yDAnBkB,0DAAH,qDAuBzB,OACE,gDACMN,GADN,IAEEO,UAAWhF,EACT,8EAD0B,OAE1ByE,QAF0B,IAE1BA,OAF0B,EAE1BA,EAAOO,WAJX,UAME,sBACEA,UAAW,6DACXC,QApCe,kBAAMP,EAAQI,KAAK,MAkCpC,UAGE,qBAAKE,UAAW,aAAhB,SACE,qBAAKE,IAAKC,EAAOC,IAAK,QAASJ,UAAW,aAE5C,oBAAIA,UAAW,kCAAf,4BAEF,8BACIzF,EAKA,cAAC,IAAD,CAAMyF,UAAW,YAAaK,GAAI,IAAKJ,QAASL,EAAhD,oBAJA,cAAC,IAAD,CAAMI,UAAW,YAAaK,GAAI,QAAlC,0BCrDGC,GAA4D,SAAC,GAAD,IACvEC,EADuE,EACvEA,oBACA9D,EAFuE,EAEvEA,SACGgD,EAHoE,yDAKvE,sBACEO,UAAS,OACPO,QADO,IACPA,IACAvF,EAAkB,oBAAD,OAAsByE,QAAtB,IAAsBA,OAAtB,EAAsBA,EAAOO,WAHlD,UAKE,cAAC,GAAD,IACCvD,M,UCnBQ+D,GAA6BvB,cAAH,iJAU1BwB,GAAqBxB,cAAH,oOAclByB,GAAgCzB,cAAH,inB,oBCxB7B0B,GAAoB1B,cAAH,mNCqBjB2B,GAA8B,SAAC,GAUrC,IAAD,MATJC,qBACEC,EAQE,EARFA,GACAC,EAOE,EAPFA,aACAC,EAME,EANFA,eACAC,EAKE,EALFA,UACAC,EAIE,EAJFA,iBACAC,EAGE,EAHFA,kBAEC1B,EACC,0CAIA2B,mBAASlC,EAAiB,CAAEmC,UAAW,CAAEP,GAAIC,KAFzCO,EAFJ,EAEF9C,KACO+C,EAHL,EAGFC,MAHE,EASAJ,mBAASX,GAAoB,CAAEY,UAAW,CAAEP,GAAIE,KAF5CS,EAPJ,EAOFjD,KACOkD,EARL,EAQFF,MARE,EAcApC,uBAAauB,IAdb,mBAYFgB,EAZE,YAaMC,EAbN,EAaApD,KAAmCqD,EAbnC,EAa4BL,MAGhCzE,qBAAU,WACJmE,GAAoBC,GACtBQ,EAAsB,CACpBN,UAAW,CAAES,SAAUZ,EAAkBa,UAAWZ,OAEvD,CAACD,EAAkBC,EAAmBQ,IAEzC,IAAMK,EAAqClF,mBACzC,iBAC4B,qBAAnBwE,GACuB,OAA9BA,EAAeU,WACXV,EAAeU,gBACftH,IACN,CAAC4G,IAGGW,EAAyCnF,mBAC7C,iBAC8B,qBAArB2E,GACqC,OAA5CA,EAAiBS,uBACbT,EAAiBS,4BACjBxH,IACN,CAAC+G,IAGGU,EAAiDrF,mBACrD,iBACkC,qBAAzB8E,GACmC,OAA1CA,EAAqBO,iBACjBP,EAAqBO,sBACrBzH,IACN,CAACkH,IAGH7E,qBAAU,WACuB,qBAApBwE,GACTxD,QAAQC,IAAI,2CAA4CuD,GACzB,qBAAtBG,GACT3D,QAAQC,IACN,8CACA0D,GAEiC,qBAA1BG,GACT9D,QAAQC,IACN,8CACA6D,KAEH,CAACN,EAAiBG,EAAmBG,IAExC,IAAMO,EAAYC,uBAChB,SAACC,EAAavD,GAAd,OACE,sBAAKiB,UAAW,0BAAhB,UACE,qBAAKA,UAAW,kBAAhB,SACE,mBAAGA,UAAW,iBAAd,SAAiCsC,MAEnC,4BAAIvD,SAGR,IAGF,OACE,gDACMU,GADN,IAEEO,UAAWhF,EAAkB,YAAD,OAAcyE,QAAd,IAAcA,OAAd,EAAcA,EAAOO,WAFnD,UAGGoC,EAAU,eAAgBtB,GAC1BsB,EAAU,YAAajH,EAAW8F,IACZ,qBAAfe,EACNI,EAAU,UAAWJ,EAAWlB,IAEhC,6BAEuB,qBAAjBmB,EACNG,EACE,iBADO,oBAEJH,EAAaM,YAFT,QAEiBN,EAAanB,GAF9B,qBAGLmB,EAAaO,QAHR,MAOT,6BAEDtB,GAAoBC,EACnBiB,EACE,uBADO,UAEJlB,EAFI,aAEiBC,IAG1B,6BAE2B,qBAArBgB,EACNC,EAAU,mBAAoBD,EAAiBM,OAE/C,kCCxHFC,GAA6B,CACjC,CAAEC,MAAO,KAAMC,WAAY,KAAMC,KAAM,GACvC,CACEF,MAAO,YACPC,WAAY,YACZE,KAAM,WACNC,MAAO,IACPC,eAAgB,SAACC,GAAD,OAAY9H,EAAW8H,EAAOlE,SAEhD,CACE4D,MAAO,eACPC,WAAY,UACZC,KAAM,GAER,CACEF,MAAO,mBACPC,WAAY,oBACZM,UAAU,EACVL,KAAM,GAER,CACEF,MAAO,oBACPC,WAAY,qBACZM,UAAU,EACVL,KAAM,IAIGM,GAAwB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAe3D,EAAY,gCAChC2B,mBAASV,GAA+B,CACvEW,UAAW,CAAE+B,gBADP5E,EADyD,EACzDA,KAAM6E,EADmD,EACnDA,QAAS7B,EAD0C,EAC1CA,MAIvBzE,qBAAU,WACa,qBAAVyE,GACTzD,QAAQC,IAAI,iCACb,CAACwD,IAEJ,IAAM8B,EAAoCxG,mBACxC,iBACkB,qBAAT0B,GAAuD,OAA/BA,EAAK+E,sBAChC/E,EAAK+E,sBACL,KACN,CAAC/E,IAGGgF,EAA2B1G,mBAAQ,kBAAMwG,IAAW,CAACA,IAlBM,EAoBvB5G,qBApBuB,mBAoB1D+G,EApB0D,KAoB3CC,EApB2C,OAqB3BhH,oBAAkB,GArBS,mBAqB1DiH,EArB0D,KAqB7CC,EArB6C,KAuB3DC,EAAaxB,uBAAY,SAACyB,GAC9BJ,EAAiBI,EAAMhD,IACvB8C,GAAe,KACd,IAEGG,EAAmBjH,mBACvB,kBAAMwG,EAAUU,MAAK,qBAAGlD,KAAgB2C,OACxC,CAACH,EAAWG,IAGd,OACE,qCACE,cAAC,KAAD,yBACEQ,SAAU,GACVZ,QAASA,EACTa,yBAAuB,EACvBL,WAAYA,GACRpE,GALN,IAME0E,KAAMX,EACNY,QAAS1B,MAEX,cAAC2B,GAAA,EAAD,CAAOC,KAAMX,EAAaY,QAAS,kBAAMX,GAAe,IAAxD,SAC+B,qBAArBG,EACN,qBACE/D,UACE,wHAEFwE,MAAO,CAAEC,SAAU,KAJrB,SAKE,cAAC,GAAD,CAAU5D,qBAAsBkD,MAGlC,mCC1FGW,GAAgC,SAAC,GAAkB,IAAbjF,EAAY,sBACrC2B,mBAASZ,GAA4B,CAC3DpE,YAAa,iBADPoC,EADqD,EACrDA,KAAMgD,EAD+C,EAC/CA,MAIdzE,qBAAU,WACa,qBAAVyE,IACTzD,QAAQC,IAAIwD,GACZzB,MAAM,mEAEP,CAACyB,IAEJ,IAAMmD,EAAsC7H,mBAC1C,iBACkB,qBAAT0B,GAA2C,OAAnBA,EAAKoG,UAChCpG,EAAKoG,UACL,KACN,CAACpG,IAjB0D,EAoBT9B,qBApBS,mBAoBtDmI,EApBsD,KAoBlCC,EApBkC,KAsBvDC,EAAmBjI,mBACvB,kBAAM6H,EAAiBX,MAAK,qBAAGlD,KAAgB+D,OAC/C,CAACF,EAAkBE,IAGfG,EAAclI,mBAClB,kBACEiI,GAAoB,CAClBhG,MAAOgG,EAAiBjE,GACxB2B,MAAOsC,EAAiBxC,QAE5B,CAACwC,IAGGE,EAA0BnI,mBAC9B,kBAAM6H,EAAiBO,KAAI,kBAAmB,CAAEnG,MAArB,EAAG+B,GAA6B2B,MAAhC,EAAOF,WAClC,CAACoC,IAYH,OACE,gDACMlF,GADN,IAEEO,UAAWhF,EACT,0BAD0B,OAE1ByE,QAF0B,IAE1BA,OAF0B,EAE1BA,EAAOO,WAJX,UAME,cAAC,KAAD,CACEmF,YAAa,mBACbC,QAASH,EACTlG,MAAOiG,EACPK,SApB2B,SAC/BC,GAKIA,GAAgBR,EAAsBQ,EAAevG,UAiBxB,qBAAvB8F,EACN,qBAAK7E,UAAW,iDAAhB,SACE,qBAAKA,UAAW,0BAA2BwE,MAAO,CAAEC,SAAU,KAA9D,SACE,cAAC,GAAD,CAAOrB,WAAYyB,QAGrB,UC7EGU,GAAe,WAAO,IACzBhL,EAAoBO,IAApBP,gBAER,OACE,cAAC,GAAD,CAAyByF,UAAW,yBAApC,SACGzF,EACC,cAAC,GAAD,CAAWyF,UAAW,mBAEtB,qBAAKA,UAAW,6CAAhB,SACE,oBAAIA,UAAW,WAAf,gC,mBCDGwF,GAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,WACGlG,EACC,uDACJ,OACE,gDACMA,GADN,IAEEO,UAAWhF,EAAkB,gBAAD,OAAkByE,QAAlB,IAAkBA,OAAlB,EAAkBA,EAAOO,WAFvD,UAGE,+CAAO4F,QAASH,GAAeC,GAA/B,aACGD,KAEH,mCAAO3E,GAAI2E,GAAeE,SCTnBE,GAA8C,SAAC,GAGrD,IAFLC,EAEI,EAFJA,aACGrG,EACC,kCACkC/C,mBAA2B,CAC/DqJ,SAAU,GACVC,SAAU,KAHR,mBACG5I,EADH,KACgB6I,EADhB,KAwBEC,EAA2B,SAC/B5D,GAD+B,OAEU,SAAC6D,GAAD,OACzCF,GAAe,SAACG,GAAD,mBAAC,eACXA,GADU,mBAEZ9D,EAAM6D,EAAME,OAAOtH,aAGxB,OACE,iDACMU,GADN,IAEEO,UAAWhF,EAAkB,gBAAiByE,EAAMO,WAFtD,UAlBG,CACH,CAAEyC,MAAO,WAAYH,IAAK,YAC1B,CACEG,MAAO,WACPH,IAAK,WACL7C,MAAO,CAAEkG,WAAY,CAAE7C,KAAM,eAgBrBoC,KAAI,WAAwBoB,GAAxB,IAAG7D,EAAH,EAAGA,MAAOH,EAAV,EAAUA,IAAK7C,EAAf,EAAeA,MAAf,OACV,cAAC,GAAD,yBAEEgG,UAAWhD,GACPhD,GAHN,IAIEkG,WAAU,aACR3F,UAAW,qCACXjB,MAAO3B,EAAYkF,GACnB+C,SAAUa,EAAyB5D,IAH3B,OAIL7C,QAJK,IAILA,OAJK,EAILA,EAAOkG,YAEZ3F,UAAWhF,EACC,IAAVsL,EAAc,OAAS,GADG,OAE1B7G,QAF0B,IAE1BA,OAF0B,EAE1BA,EAAOO,aAXJsG,MAgBT,wBACEtG,UAAW,uBACXC,QAlDsD,SAACsG,GAC3DA,EAAEC,iBACFV,EAAa1I,IAiDT0F,KAAM,SAHR,wB,oBC5DO2D,GAAW,WAAO,IACrBjM,EAAuBM,IAAvBN,mBAEFkF,EAAUC,cAEVmG,EAAY,uCAAG,WAAOY,GAAP,eAAAtI,EAAA,+EAGGD,EAAMuI,GAHT,OAGX7K,EAHW,OAKjBD,EAAoBC,GAEpBrB,GAAmB,GAEnBkF,EAAQiH,QAAQ,KATC,gDAWjB5I,QAAQC,IAAR,MACA+B,MAAM,uDAZW,yDAAH,sDAgBlB,OACE,qBACEC,UAAW,8DADb,SAEE,sBAAKA,UAAW,sBAAhB,UACE,gCACE,qBAAKE,IAAKC,EAAOC,IAAK,QAASJ,UAAW,sBAE1C,sBAAKA,UAAW,kDAAhB,UACE,cAAC,KAAD,CAAa4G,MAAOC,KAAOC,QAAQ,OACnC,mBAAG9G,UAAW,4BAAd,4DAMJ,qBAAKA,UAAW,OAAhB,SACE,cAAC,GAAD,CAAkB8F,aAAcA,Y,UC/C7BiB,GAAmB,WAC9B,OACE,sBACE/G,UAAW,8DADb,UAEE,cAAC,KAAD,CAAegH,KAAM,GAAIJ,MAAOC,KAAOC,QAAQ,OAC/C,oBAAI9G,UAAW,gBAAf,2BACA,wBAAQA,UAAW,uBAAnB,SACE,cAAC,IAAD,CAAMK,GAAI,IAAV,qCCRK4G,GAAqB,WAChC,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAM,QAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,IAAnB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,cAAC,GAAD,Y,SCZGC,GAAWC,aAAe,CACrCC,QAAS,CACPC,QAAS,CACPtN,KAAM4M,KAAOU,QAAQ,KACrBC,MAAOX,KAAOU,QAAQ,KACtBE,KAAMZ,KAAOU,QAAQ,KACrBG,aAAc,SAEhBC,UAAW,CACT1N,KAAM4M,KAAOe,MAAM,KACnBJ,MAAOX,KAAOe,MAAM,KACpBH,KAAMZ,KAAOe,MAAM,KACnBF,aAAc,SAEhBG,QAAS,CACP5N,KAAM4M,KAAOgB,QAAQ,KACrBL,MAAOX,KAAOgB,QAAQ,KACtBJ,KAAMZ,KAAOgB,QAAQ,KACrBH,aAAc,SAEhBI,KAAM,CACJ7N,KAAM4M,KAAOiB,KAAK,KAClBN,MAAOX,KAAOiB,KAAK,KACnBL,KAAMZ,KAAOiB,KAAK,KAClBJ,aAAc,SAEhBZ,QAAS,CACP7M,KAAM4M,KAAOC,QAAQ,KACrBU,MAAOX,KAAOC,QAAQ,KACtBW,KAAMZ,KAAOC,QAAQ,KACrBY,aAAc,SAEhBlG,MAAO,CACLvH,KAAM4M,KAAOkB,OAAO,KACpBP,MAAOX,KAAOkB,OAAO,KACrBN,KAAMZ,KAAOkB,OAAO,KACpBL,aAAc,YCjBLM,OAdf,WACE,OACE,cAACC,EAAA,EAAD,CAAeC,MAAOd,GAAtB,SACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,cAAC,GAAD,aCDGe,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBzK,MAAK,YAAkD,IAA/C0K,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,iBACE,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,M,iBCoDAY,EAAOC,QApEQ,CACbzB,QAAS,CACP0B,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,WAEP3B,QAAS,CACPoB,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLI,IAAK,UACLH,IAAK,UACLC,IAAK,UACLC,IAAK,WAEP1B,KAAM,CACJmB,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLI,IAAK,UACLH,IAAK,UACLC,IAAK,UACLC,IAAK,WAEP1C,QAAS,CACPmC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLI,IAAK,UACLH,IAAK,UACLC,IAAK,UACLC,IAAK,WAEPzB,OAAQ,CACNkB,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLI,IAAK,UACLH,IAAK,UACLC,IAAK,UACLC,IAAK,WAEP5B,MAAO,CACLqB,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLC,IAAK,UACLI,IAAK,UACLH,IAAK,UACLC,IAAK,UACLC,IAAK,c","file":"static/js/main.65e8a5c4.chunk.js","sourcesContent":["const main = process.env.REACT_APP_SERVER_URL;\n\nexport const serverUrl = {\n  main,\n  auth: `${main}/auth`,\n  graphql: `${main}/graphql`,\n};\n","import { createContext, Dispatch, SetStateAction } from 'react';\n\nimport { User } from 'models/user';\n\ntype AuthContextType = {\n  isAuthenticated: boolean;\n  setIsAuthenticated: Dispatch<SetStateAction<boolean>>;\n  user: User | undefined;\n  setUser: Dispatch<SetStateAction<User | undefined>>;\n};\n\nconst initialAuthContext: AuthContextType = {\n  isAuthenticated: false,\n  setIsAuthenticated: () => {},\n  user: undefined,\n  setUser: () => {},\n};\n\nexport const AuthContext = createContext(initialAuthContext);\n","import { useContext } from 'react';\n\nimport { AuthContext } from 'utilities/context';\n\nexport const useAuthContext = () => useContext(AuthContext);\n","export const combineClassNames = (\n  className1: string,\n  className2?: string,\n): string => `${className1} ${className2 ?? ''}`;\n","import moment from 'moment';\n\nexport const formatDate = (date: Date | string): string => {\n  if (moment(date).isValid())\n    return moment(date).format('DD/MM/YYYY h:mm:ss a');\n  return '';\n};\n","const storageKey = 'authorizationToken';\n\nexport const getTokenFromStorage = (): string | null =>\n  localStorage.getItem(storageKey);\n\nexport const setTokenIntoStorage = (token: string): void =>\n  localStorage.setItem(storageKey, token);\n\nexport const removeTokenFromStorage = (): void =>\n  localStorage.removeItem(storageKey);\n","import React, { FC, useEffect, useMemo, useState } from 'react';\nimport {\n  ApolloClient,\n  ApolloProvider,\n  createHttpLink,\n  DefaultOptions,\n  InMemoryCache,\n  NormalizedCacheObject,\n} from '@apollo/client';\nimport { persistCache, SessionStorageWrapper } from 'apollo3-cache-persist';\n\nimport { serverUrl } from 'config/environment';\n\nimport { useAuthContext } from 'utilities/hooks';\nimport { getTokenFromStorage } from 'utilities/functions';\n\nconst uri = serverUrl.graphql;\n\nconst defaultOptions: DefaultOptions = {\n  watchQuery: {\n    fetchPolicy: 'cache-and-network',\n    errorPolicy: 'ignore',\n  },\n  query: {\n    fetchPolicy: 'cache-first',\n    errorPolicy: 'all',\n  },\n  mutate: {\n    errorPolicy: 'all',\n  },\n};\n\nexport const ApolloLayer: FC = ({ children }) => {\n  const [client, setClient] = useState<ApolloClient<NormalizedCacheObject>>();\n\n  const { isAuthenticated } = useAuthContext();\n\n  const authorizationToken: string | undefined = useMemo(() => {\n    if (isAuthenticated) return getTokenFromStorage() ?? undefined;\n  }, [isAuthenticated]);\n\n  useEffect(() => {\n    // setup apollo client\n    const headers =\n      typeof authorizationToken !== 'undefined'\n        ? {\n            authorization: authorizationToken,\n          }\n        : undefined;\n\n    const link = createHttpLink({\n      uri,\n      credentials: 'include',\n      headers,\n    });\n\n    const cache = new InMemoryCache();\n\n    persistCache({\n      cache,\n      storage: new SessionStorageWrapper(window.sessionStorage),\n    })\n      .then(() => {\n        const newClient = new ApolloClient({\n          cache,\n          link,\n          defaultOptions,\n          headers,\n        });\n\n        setClient(newClient);\n        console.log('apollo client is loaded!');\n      })\n      .catch(() => console.log('error setting up apollo cache persist'));\n  }, [authorizationToken]);\n\n  return (\n    <>\n      {typeof client !== 'undefined' ? (\n        <ApolloProvider client={client}>{children}</ApolloProvider>\n      ) : null}\n    </>\n  );\n};\n","import axios from 'axios';\n\nimport { serverUrl } from 'config/environment';\n\nimport { LoginCredentials } from 'models/auth';\n\nconst url = `${serverUrl.auth}/login`;\n\nexport const login = async (credentials: LoginCredentials): Promise<string> => {\n  const response = await axios.post(url, credentials);\n  return response.data;\n};\n","import axios from 'axios';\n\nimport { serverUrl } from 'config/environment';\n\nconst url = `${serverUrl.auth}/logout`;\n\nexport const logout = async (authorizationToken: string): Promise<void> => {\n  await axios.post(url, undefined, {\n    headers: { authorization: authorizationToken },\n  });\n};\n","import axios from 'axios';\n\nimport { serverUrl } from 'config/environment';\n\nconst url = `${serverUrl.auth}/isAuthenticated`;\n\nexport const checkIsAuthenticated = async (\n  authenticationToken: string,\n): Promise<void> => {\n  await axios.get(url, { headers: { authorization: authenticationToken } });\n};\n","import React, { FC, useEffect, useState } from 'react';\n\nimport { User } from 'models/user';\n\nimport { checkIsAuthenticated } from 'api/auth';\n\nimport { AuthContext } from 'utilities/context';\nimport {\n  getTokenFromStorage,\n  removeTokenFromStorage,\n} from 'utilities/functions';\n\nexport const AuthLayer: FC = ({ children }) => {\n  const [isAuthenticated, setIsAuthenticated] = useState<boolean>(false);\n  const [user, setUser] = useState<User>();\n\n  // check if the token exists in the local storage, and validate it\n  useEffect(() => {\n    const token = getTokenFromStorage();\n    if (token !== null)\n      checkIsAuthenticated(token)\n        .then(() => setIsAuthenticated(true))\n        .catch(() => {\n          removeTokenFromStorage();\n          setIsAuthenticated(false);\n        });\n  }, []);\n\n  return (\n    <AuthContext.Provider\n      value={{ isAuthenticated, setIsAuthenticated, user, setUser }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { gql } from '@apollo/client';\n\nexport const GET_ME = gql`\n  query me {\n    me {\n      ... on User {\n        id\n        username\n        firstName\n        lastName\n        createdAt\n      }\n    }\n  }\n`;\n\nexport const GET_SIMPLE_USER = gql`\n  query simpleUser($id: String, $identifier: String) {\n    simpleUser(where: { id: $id, identifier: $identifier }) {\n      id\n      identifier\n      createdAt\n      lastSeen\n    }\n  }\n`;\n","import React, { FC, useEffect } from 'react';\nimport { useLazyQuery } from '@apollo/client';\n\nimport { GET_ME } from 'api/graphql/user';\n\nimport { useAuthContext } from 'utilities/hooks';\n\nexport const UserLayer: FC = ({ children }) => {\n  const { isAuthenticated, setUser } = useAuthContext();\n\n  const [getMe, { data }] = useLazyQuery(GET_ME);\n\n  useEffect(() => {\n    if (isAuthenticated) getMe();\n    else setUser(undefined);\n  }, [isAuthenticated, setUser, getMe]);\n\n  useEffect(() => {\n    if (\n      typeof data !== 'undefined' &&\n      data.me !== null &&\n      data.me.__typename === 'User'\n    ) {\n      setUser(data.me);\n    }\n  }, [data, setUser]);\n\n  return <>{children}</>;\n};\n","export default __webpack_public_path__ + \"static/media/robot.c78c2b88.png\";","import React, { FC, HTMLAttributes } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\n\nimport { logout } from 'api/auth';\n\nimport {\n  combineClassNames,\n  getTokenFromStorage,\n  removeTokenFromStorage,\n} from 'utilities/functions';\nimport { useAuthContext } from 'utilities/hooks';\n\nimport { robot } from 'assets/images';\n\ninterface NavBarProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const NavBar: FC<NavBarProps> = ({ ...props }) => {\n  const history = useHistory();\n\n  const onBrandClick = () => history.push('/');\n\n  const { isAuthenticated, setIsAuthenticated } = useAuthContext();\n\n  const onLogoutButtonClick = async () => {\n    try {\n      const token = getTokenFromStorage();\n\n      if (token === null)\n        throw new Error(\n          'Token does not exist in the local storage. This is a no-op.',\n        );\n\n      await logout(token);\n\n      // remove token from storage, and set is authenticated state\n      removeTokenFromStorage();\n      setIsAuthenticated(false);\n\n      // navigate to home page\n      history.push('/');\n    } catch (error) {\n      console.log(error);\n      alert('There was an error logging you out. Please try again.');\n    }\n  };\n\n  return (\n    <div\n      {...props}\n      className={combineClassNames(\n        'w-full h-10 md:h-12 lg:h-16 flex flex-row justify-between items-center px-4',\n        props?.className,\n      )}>\n      <div\n        className={'h-full flex flex-row items-center space-x-2 cursor-pointer'}\n        onClick={onBrandClick}>\n        <div className={'h-full p-1'}>\n          <img src={robot} alt={'robot'} className={'h-full'} />\n        </div>\n        <h1 className={'text-lg lg:text-2xl xl:text-3xl'}>Blue Nebula</h1>\n      </div>\n      <div>\n        {!isAuthenticated ? (\n          <Link className={'text-base'} to={'/auth'}>\n            Login\n          </Link>\n        ) : (\n          <Link className={'text-base'} to={'/'} onClick={onLogoutButtonClick}>\n            Logout\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n","import React, { FC, HTMLAttributes } from 'react';\n\nimport { NavBar } from './NavBar';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface PageContainerWithNavBarProps extends HTMLAttributes<HTMLDivElement> {\n  overridingClassName?: string;\n}\n\nexport const PageContainerWithNavBar: FC<PageContainerWithNavBarProps> = ({\n  overridingClassName,\n  children,\n  ...props\n}) => (\n  <div\n    className={\n      overridingClassName ??\n      combineClassNames('container mx-auto', props?.className)\n    }>\n    <NavBar />\n    {children}\n  </div>\n);\n","import { gql } from '@apollo/client';\n\nexport const GET_ALL_MICRO_APPS_HEADERS = gql`\n  query microApps {\n    microApps(orderBy: { name: asc }) {\n      id\n      name\n      activeVersion\n    }\n  }\n`;\n\nexport const GET_MICRO_APP_DATA = gql`\n  query microAppData($id: String) {\n    findUniqueMicroAppData(where: { id: $id }) {\n      id\n      microAppId\n      name\n      version\n      data\n      createdAt\n      creatorId\n    }\n  }\n`;\n\nexport const GET_MICRO_APP_DATA_USAGE_LOGS = gql`\n  query microAppDataUsageLogs($microAppId: String, $microAppName: String) {\n    microAppDataUsageLogs(\n      where: {\n        microAppData: {\n          is: {\n            microApp: {\n              is: {\n                OR: [\n                  { id: { equals: $microAppId } }\n                  { name: { equals: $microAppName } }\n                ]\n              }\n            }\n          }\n        }\n      }\n      orderBy: { timestamp: desc }\n    ) {\n      id\n      simpleUserId\n      microAppDataId\n      timestamp\n      locationLatitude\n      locationLongitude\n    }\n  }\n`;\n","import { gql } from '@apollo/client';\n\nexport const REVERSE_GEOCODING = gql`\n  query reverseGeocoding($latitude: Float!, $longitude: Float!) {\n    reverseGeocoding(where: { latitude: $latitude, longitude: $longitude }) {\n      label\n      name\n    }\n  }\n`;\n","import React, {\n  FC,\n  HTMLAttributes,\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport { useLazyQuery, useQuery } from '@apollo/client';\n\nimport { MicroAppDataUsageLog, MicroAppData } from 'models/micro-app';\nimport { SimpleUser } from 'models/user';\nimport { ReverseGeocoding } from 'models/geocoding';\n\nimport { GET_SIMPLE_USER } from 'api/graphql/user';\nimport { GET_MICRO_APP_DATA } from 'api/graphql/microApp';\nimport { REVERSE_GEOCODING } from 'api/graphql/geocoding';\n\nimport { combineClassNames, formatDate } from 'utilities/functions';\n\ninterface UsageLogProps extends HTMLAttributes<HTMLDivElement> {\n  microAppDataUsageLog: MicroAppDataUsageLog;\n}\n\nexport const UsageLog: FC<UsageLogProps> = ({\n  microAppDataUsageLog: {\n    id,\n    simpleUserId,\n    microAppDataId,\n    timestamp,\n    locationLatitude,\n    locationLongitude,\n  },\n  ...props\n}) => {\n  const {\n    data: simpleUserData,\n    error: simpleUserError,\n  } = useQuery(GET_SIMPLE_USER, { variables: { id: simpleUserId } });\n\n  const {\n    data: microAppDataData,\n    error: microAppDataError,\n  } = useQuery(GET_MICRO_APP_DATA, { variables: { id: microAppDataId } });\n\n  const [\n    fetchReverseGeocoding,\n    { data: reverseGeocodingData, error: reverseGeocodingError },\n  ] = useLazyQuery(REVERSE_GEOCODING);\n\n  useEffect(() => {\n    if (locationLatitude && locationLongitude)\n      fetchReverseGeocoding({\n        variables: { latitude: locationLatitude, longitude: locationLongitude },\n      });\n  }, [locationLatitude, locationLongitude, fetchReverseGeocoding]);\n\n  const simpleUser: SimpleUser | undefined = useMemo(\n    () =>\n      typeof simpleUserData !== 'undefined' &&\n      simpleUserData.simpleUser !== null\n        ? simpleUserData.simpleUser\n        : undefined,\n    [simpleUserData],\n  );\n\n  const microAppData: MicroAppData | undefined = useMemo(\n    () =>\n      typeof microAppDataData !== 'undefined' &&\n      microAppDataData.findUniqueMicroAppData !== null\n        ? microAppDataData.findUniqueMicroAppData\n        : undefined,\n    [microAppDataData],\n  );\n\n  const reverseGeocoding: ReverseGeocoding | undefined = useMemo(\n    () =>\n      typeof reverseGeocodingData !== 'undefined' &&\n      reverseGeocodingData.reverseGeocoding !== null\n        ? reverseGeocodingData.reverseGeocoding\n        : undefined,\n    [reverseGeocodingData],\n  );\n\n  useEffect(() => {\n    if (typeof simpleUserError !== 'undefined')\n      console.log('error retrieving simple user information', simpleUserError);\n    if (typeof microAppDataError !== 'undefined')\n      console.log(\n        'error retrieving micro app data information',\n        microAppDataError,\n      );\n    if (typeof reverseGeocodingError !== 'undefined')\n      console.log(\n        'error getting reverse geocoding information',\n        reverseGeocodingError,\n      );\n  }, [simpleUserError, microAppDataError, reverseGeocodingError]);\n\n  const renderRow = useCallback(\n    (key: string, value: string) => (\n      <div className={'flex flex-row space-x-1'}>\n        <div className={'w-1/3 flex-none'}>\n          <p className={'text-basic-600'}>{key}</p>\n        </div>\n        <p>{value}</p>\n      </div>\n    ),\n    [],\n  );\n\n  return (\n    <div\n      {...props}\n      className={combineClassNames('space-y-3', props?.className)}>\n      {renderRow('Usage Log ID', id)}\n      {renderRow('Timestamp', formatDate(timestamp))}\n      {typeof simpleUser !== 'undefined' ? (\n        renderRow('User ID', simpleUser.id)\n      ) : (\n        <></>\n      )}\n      {typeof microAppData !== 'undefined' ? (\n        renderRow(\n          'Micro App Data',\n          `${microAppData.name ?? microAppData.id} (version ${\n            microAppData.version\n          })`,\n        )\n      ) : (\n        <></>\n      )}\n      {locationLatitude && locationLongitude ? (\n        renderRow(\n          'Location coordinates',\n          `${locationLatitude}, ${locationLongitude}`,\n        )\n      ) : (\n        <></>\n      )}\n      {typeof reverseGeocoding !== 'undefined' ? (\n        renderRow('Location address', reverseGeocoding.label)\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n};\n","import React, { FC, useCallback, useEffect, useMemo, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport {\n  DataGrid,\n  GridColDef,\n  GridRowData,\n  GridRowParams,\n} from '@material-ui/data-grid';\nimport { Modal } from '@material-ui/core';\n\nimport { MicroAppDataUsageLog } from 'models/micro-app';\n\nimport { GET_MICRO_APP_DATA_USAGE_LOGS } from 'api/graphql/microApp';\n\nimport { UsageLog } from './UsageLog';\n\nimport { formatDate } from 'utilities/functions';\n\ninterface UsageProps {\n  microAppId: string;\n}\n\nconst tableColumns: GridColDef[] = [\n  { field: 'id', headerName: 'ID', flex: 1 },\n  {\n    field: 'timestamp',\n    headerName: 'Timestamp',\n    type: 'dateTime',\n    width: 200,\n    valueFormatter: (params) => formatDate(params.value as Date),\n  },\n  {\n    field: 'simpleUserId',\n    headerName: 'User ID',\n    flex: 2,\n  },\n  {\n    field: 'locationLatitude',\n    headerName: 'Location Latitude',\n    sortable: false,\n    flex: 1,\n  },\n  {\n    field: 'locationLongitude',\n    headerName: 'Location Longitude',\n    sortable: false,\n    flex: 1,\n  },\n];\n\nexport const Usage: FC<UsageProps> = ({ microAppId, ...props }) => {\n  const { data, loading, error } = useQuery(GET_MICRO_APP_DATA_USAGE_LOGS, {\n    variables: { microAppId },\n  });\n\n  useEffect(() => {\n    if (typeof error !== 'undefined')\n      console.log('error retrieving usage logs');\n  }, [error]);\n\n  const usageLogs: MicroAppDataUsageLog[] = useMemo(\n    () =>\n      typeof data !== 'undefined' && data.microAppDataUsageLogs !== null\n        ? data.microAppDataUsageLogs\n        : [],\n    [data],\n  );\n\n  const tableRows: GridRowData[] = useMemo(() => usageLogs, [usageLogs]);\n\n  const [selectedRowId, setSelectedRowId] = useState<string>();\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  const onRowClick = useCallback((param: GridRowParams) => {\n    setSelectedRowId(param.id as string);\n    setIsModalOpen(true);\n  }, []);\n\n  const selectedUsageLog = useMemo(\n    () => usageLogs.find(({ id }) => id === selectedRowId),\n    [usageLogs, selectedRowId],\n  );\n\n  return (\n    <>\n      <DataGrid\n        pageSize={10}\n        loading={loading}\n        disableSelectionOnClick\n        onRowClick={onRowClick}\n        {...props}\n        rows={tableRows}\n        columns={tableColumns}\n      />\n      <Modal open={isModalOpen} onClose={() => setIsModalOpen(false)}>\n        {typeof selectedUsageLog !== 'undefined' ? (\n          <div\n            className={\n              'absolute top-1/2 left-1/2 w-5/6 md:w-4/5 lg:w-2/3 transform -translate-x-1/2 -translate-y-1/2 rounded-lg bg-white p-4'\n            }\n            style={{ minWidth: 300 }}>\n            <UsageLog microAppDataUsageLog={selectedUsageLog} />\n          </div>\n        ) : (\n          <></>\n        )}\n      </Modal>\n    </>\n  );\n};\n","import React, { FC, HTMLAttributes, useEffect, useMemo, useState } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Select from 'react-select';\n\nimport { MicroAppHeaders } from 'models/micro-app';\n\nimport { GET_ALL_MICRO_APPS_HEADERS } from 'api/graphql/microApp';\n\nimport { Usage } from './Usage';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface MicroAppsProps extends HTMLAttributes<HTMLDivElement> {}\n\nexport const MicroApps: FC<MicroAppsProps> = ({ ...props }) => {\n  const { data, error } = useQuery(GET_ALL_MICRO_APPS_HEADERS, {\n    fetchPolicy: 'network-only',\n  });\n\n  useEffect(() => {\n    if (typeof error !== 'undefined') {\n      console.log(error);\n      alert('There was an error while fetching for the micro app headers.');\n    }\n  }, [error]);\n\n  const microAppsHeaders: MicroAppHeaders[] = useMemo(\n    () =>\n      typeof data !== 'undefined' && data.microApps !== null\n        ? data.microApps\n        : [],\n    [data],\n  );\n\n  const [selectedMicroAppId, setSelectedMicroAppId] = useState<string>();\n\n  const selectedMicroApp = useMemo(\n    () => microAppsHeaders.find(({ id }) => id === selectedMicroAppId),\n    [microAppsHeaders, selectedMicroAppId],\n  );\n\n  const selectValue = useMemo(\n    () =>\n      selectedMicroApp && {\n        value: selectedMicroApp.id,\n        label: selectedMicroApp.name,\n      },\n    [selectedMicroApp],\n  );\n\n  const microAppSelectorOptions = useMemo(\n    () => microAppsHeaders.map(({ id, name }) => ({ value: id, label: name })),\n    [microAppsHeaders],\n  );\n\n  const onMicroAppSelectorChange = (\n    selectedOption: {\n      value: string;\n      label: string;\n    } | null,\n  ) => {\n    if (selectedOption) setSelectedMicroAppId(selectedOption.value);\n  };\n\n  return (\n    <div\n      {...props}\n      className={combineClassNames(\n        'flex flex-col space-y-4',\n        props?.className,\n      )}>\n      <Select\n        placeholder={'Select micro app'}\n        options={microAppSelectorOptions}\n        value={selectValue}\n        onChange={onMicroAppSelectorChange}\n      />\n\n      {typeof selectedMicroAppId !== 'undefined' ? (\n        <div className={'flex-grow flex flex-col w-full overflow-x-auto'}>\n          <div className={'flex-grow flex flex-col'} style={{ minWidth: 800 }}>\n            <Usage microAppId={selectedMicroAppId} />\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React, { FC } from 'react';\n\nimport { PageContainerWithNavBar } from 'components/shared/interface';\nimport { MicroApps } from 'components/micro-app';\n\nimport { useAuthContext } from 'utilities/hooks';\n\nexport const HomePage: FC = () => {\n  const { isAuthenticated } = useAuthContext();\n\n  return (\n    <PageContainerWithNavBar className={'h-screen flex flex-col'}>\n      {isAuthenticated ? (\n        <MicroApps className={'flex-grow my-4'} />\n      ) : (\n        <div className={'flex-grow flex justify-center items-center'}>\n          <h1 className={'text-2xl'}>Please login.</h1>\n        </div>\n      )}\n    </PageContainerWithNavBar>\n  );\n};\n","import React, {\n  FC,\n  HTMLAttributes,\n  InputHTMLAttributes,\n  LabelHTMLAttributes,\n} from 'react';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface LabelledInputProps extends HTMLAttributes<HTMLDivElement> {\n  labelText: string;\n  labelProps?: LabelHTMLAttributes<HTMLLabelElement>;\n  inputProps?: InputHTMLAttributes<HTMLInputElement>;\n}\n\nexport const LabelledInput: FC<LabelledInputProps> = ({\n  labelText,\n  labelProps,\n  inputProps,\n  ...props\n}) => {\n  return (\n    <div\n      {...props}\n      className={combineClassNames('flex flex-col', props?.className)}>\n      <label htmlFor={labelText} {...labelProps}>\n        {labelText}\n      </label>\n      <input id={labelText} {...inputProps} />\n    </div>\n  );\n};\n","import React, {\n  ChangeEventHandler,\n  ComponentProps,\n  FC,\n  HTMLAttributes,\n  MouseEventHandler,\n  useState,\n} from 'react';\n\nimport { LoginCredentials } from 'models/auth';\n\nimport { LabelledInput } from 'components/shared/actionable';\n\nimport { combineClassNames } from 'utilities/functions';\n\ninterface CredentialsInputProps extends HTMLAttributes<HTMLFormElement> {\n  handleSubmit: (credentials: LoginCredentials) => void;\n}\n\nexport const CredentialsInput: FC<CredentialsInputProps> = ({\n  handleSubmit,\n  ...props\n}) => {\n  const [credentials, setCredentials] = useState<LoginCredentials>({\n    username: '',\n    password: '',\n  });\n\n  const onButtonClick: MouseEventHandler<HTMLButtonElement> = (e) => {\n    e.preventDefault();\n    handleSubmit(credentials);\n  };\n\n  const fields: Array<{\n    label: string;\n    key: keyof LoginCredentials;\n    props?: Partial<ComponentProps<typeof LabelledInput>>;\n  }> = [\n    { label: 'Username', key: 'username' },\n    {\n      label: 'Password',\n      key: 'password',\n      props: { inputProps: { type: 'password' } },\n    },\n  ];\n\n  const getOnInputChangeFunction = (\n    key: keyof LoginCredentials,\n  ): ChangeEventHandler<HTMLInputElement> => (event) =>\n    setCredentials((currentCredentials) => ({\n      ...currentCredentials,\n      [key]: event.target.value,\n    }));\n\n  return (\n    <form\n      {...props}\n      className={combineClassNames('flex flex-col', props.className)}>\n      {fields.map(({ label, key, props }, index) => (\n        <LabelledInput\n          key={index}\n          labelText={label}\n          {...props}\n          inputProps={{\n            className: 'border border-gray-200 rounded p-1',\n            value: credentials[key],\n            onChange: getOnInputChangeFunction(key),\n            ...props?.inputProps,\n          }}\n          className={combineClassNames(\n            index !== 0 ? 'mt-2' : '',\n            props?.className,\n          )}\n        />\n      ))}\n\n      <button\n        className={'mt-4 btn btn-primary'}\n        onClick={onButtonClick}\n        type={'submit'}>\n        Login\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { AlertCircle } from 'react-feather';\n\nimport { LoginCredentials } from 'models/auth';\n\nimport { login } from 'api/auth';\n\nimport { CredentialsInput } from 'components/auth';\n\nimport { useAuthContext } from 'utilities/hooks';\nimport { setTokenIntoStorage } from 'utilities/functions';\n\nimport { robot } from 'assets/images';\nimport colors from 'styles/colors';\n\nexport const AuthPage = () => {\n  const { setIsAuthenticated } = useAuthContext();\n\n  const history = useHistory();\n\n  const handleSubmit = async (loginCredentials: LoginCredentials) => {\n    try {\n      // send login request\n      const token = await login(loginCredentials);\n      // set token into local storage\n      setTokenIntoStorage(token);\n      // set auth context isAuthenticated state\n      setIsAuthenticated(true);\n      // redirect\n      history.replace('/');\n    } catch (error) {\n      console.log(error);\n      alert('An error occurred logging you in. Please try again.');\n    }\n  };\n\n  return (\n    <div\n      className={'w-screen h-screen flex flex-col justify-center items-center'}>\n      <div className={'w-full max-w-md p-4'}>\n        <div>\n          <img src={robot} alt={'robot'} className={'w-28 h-28 mx-auto'} />\n\n          <div className={'mt-2 flex justify-center items-center space-x-2'}>\n            <AlertCircle color={colors.warning['500']} />\n            <p className={'font-semibold text-center'}>\n              Please login to use blue nebula services\n            </p>\n          </div>\n        </div>\n\n        <div className={'mt-6'}>\n          <CredentialsInput handleSubmit={handleSubmit} />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom';\nimport { AlertTriangle } from 'react-feather';\n\nimport colors from 'styles/colors';\n\nexport const NotFoundPage: FC = () => {\n  return (\n    <div\n      className={'w-screen h-screen flex flex-col justify-center items-center'}>\n      <AlertTriangle size={40} color={colors.warning['500']} />\n      <h1 className={'mt-2 text-3xl'}>404 Not Found</h1>\n      <button className={'mt-6 btn btn-primary'}>\n        <Link to={'/'}>Back to home page</Link>\n      </button>\n    </div>\n  );\n};\n","import React, { FC } from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport { AuthPage, HomePage, NotFoundPage } from 'pages';\n\nexport const RootNavigation: FC = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path={'/auth'}>\n          <AuthPage />\n        </Route>\n        <Route exact path={'/'}>\n          <HomePage />\n        </Route>\n        <Route>\n          <NotFoundPage />\n        </Route>\n      </Switch>\n    </Router>\n  );\n};\n","import { createMuiTheme } from '@material-ui/core';\n\nimport colors from './colors';\n\nexport const muiTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: colors.primary['500'],\n      light: colors.primary['700'],\n      dark: colors.primary['300'],\n      contrastText: 'white',\n    },\n    secondary: {\n      main: colors.basic['500'],\n      light: colors.basic['700'],\n      dark: colors.basic['300'],\n      contrastText: 'white',\n    },\n    success: {\n      main: colors.success['500'],\n      light: colors.success['700'],\n      dark: colors.success['300'],\n      contrastText: 'white',\n    },\n    info: {\n      main: colors.info['500'],\n      light: colors.info['700'],\n      dark: colors.info['300'],\n      contrastText: 'white',\n    },\n    warning: {\n      main: colors.warning['500'],\n      light: colors.warning['700'],\n      dark: colors.warning['300'],\n      contrastText: 'white',\n    },\n    error: {\n      main: colors.danger['500'],\n      light: colors.danger['700'],\n      dark: colors.danger['300'],\n      contrastText: 'white',\n    },\n  },\n});\n","import React from 'react';\nimport { ThemeProvider } from '@material-ui/core';\n\nimport { ApolloLayer, AuthLayer, UserLayer } from 'components/layer';\n\nimport { RootNavigation } from 'navigation/RootNavigation';\n\nimport { muiTheme } from 'styles/muiTheme';\n\nfunction App() {\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <AuthLayer>\n        <ApolloLayer>\n          <UserLayer>\n            <RootNavigation />\n          </UserLayer>\n        </ApolloLayer>\n      </AuthLayer>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nrender(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","const colors = {\n  primary: {\n    100: '#D6E4FF',\n    200: '#ADC8FF',\n    300: '#84A9FF',\n    400: '#6690FF',\n    500: '#3366FF',\n    700: '#1939B7',\n    800: '#102693',\n    900: '#091A7A',\n  },\n  success: {\n    100: '#CAFDD8',\n    200: '#97FBBC',\n    300: '#62F5A7',\n    400: '#3BECA0',\n    500: '#00E096',\n    600: '#00C093',\n    700: '#00A18B',\n    800: '#00817D',\n    900: '#00646B',\n  },\n  info: {\n    100: '#CCF5FF',\n    200: '#99E6FF',\n    300: '#66D0FF',\n    400: '#3FBAFF',\n    500: '#0095FF',\n    600: '#0073DB',\n    700: '#0056B7',\n    800: '#003C93',\n    900: '#002B7A',\n  },\n  warning: {\n    100: '#FFF6CD',\n    200: '#FFEB9B',\n    300: '#FFDD69',\n    400: '#FFCF43',\n    500: '#FFB805',\n    600: '#DB9703',\n    700: '#B77902',\n    800: '#935D01',\n    900: '#7A4900',\n  },\n  danger: {\n    100: '#FFDCD8',\n    200: '#FFB3B1',\n    300: '#FF8A93',\n    400: '#FF6D86',\n    500: '#FF3D71',\n    600: '#DB2C6C',\n    700: '#B71E65',\n    800: '#93135B',\n    900: '#7A0B54',\n  },\n  basic: {\n    100: '#FFFFFF',\n    200: '#F7F9FC',\n    300: '#EDF1F7',\n    400: '#E4E9F2',\n    500: '#C5CEE0',\n    600: '#8F9BB3',\n    700: '#2E3A59',\n    800: '#222B45',\n    900: '#222B45',\n  },\n};\n\nmodule.exports = colors;\n"],"sourceRoot":""}