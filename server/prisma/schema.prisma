datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

generator typegraphql {
  provider           = "typegraphql-prisma"
  output             = "../src/artifacts/type-graphql"
  emitTranspiledCode = true
}

model User {
  id              String     @id @default(uuid())
  createdAt       DateTime   @default(now())
  username        String
  firstName       String
  lastName        String
  Session         Session[]
  MicroAppCreator MicroApp[] @relation(name: "CreatorOnMicroApp")
  MicroAppUpdater MicroApp[] @relation(name: "UpdaterOnMicroApp")

  MicroAppData MicroAppData[] @relation("CreatorOnMicroAppData")
  @@unique([username])
}

model Session {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  userId    String?
  user      User?    @relation(fields: [userId], references: [id])
}

model MicroApp {
  id            String @id @default(uuid())
  name          String
  activeVersion Int    @default(1)

  microAppDataList MicroAppData[] @relation(name: "MicroAppDataOnMicroApp")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  creatorId String
  creator   User   @relation(name: "CreatorOnMicroApp", fields: [creatorId], references: [id])

  updaterId String
  updater   User   @relation(name: "UpdaterOnMicroApp", fields: [updaterId], references: [id])

  @@unique([name])
}

model MicroAppData {
  id         String   @id @default(uuid())
  microApp   MicroApp @relation(name: "MicroAppDataOnMicroApp", fields: [microAppId], references: [id])
  microAppId String

  name    String?
  version Int

  data Json @db.Json

  createdAt DateTime @default(now())

  creatorId String
  creator   User   @relation(name: "CreatorOnMicroAppData", fields: [creatorId], references: [id])

  microAppDataUsageLogs MicroAppDataUsageLog[] @relation(name: "MicroAppDataUsageLogOnMicroAppData")

  @@unique([microAppId, version])
}

model SimpleUser {
  id         String   @id @default(uuid())
  identifier String
  createdAt  DateTime @default(now())
  lastSeen   DateTime @default(now())

  microAppDataUsageLogs MicroAppDataUsageLog[] @relation(name: "MicroAppDataUsageLogOnSimpleUser")

  @@unique([identifier])
}

model MicroAppDataUsageLog {
  id String @id @default(uuid())

  simpleUser   SimpleUser @relation(name: "MicroAppDataUsageLogOnSimpleUser", fields: [simpleUserId], references: [id])
  simpleUserId String

  microAppData   MicroAppData @relation(name: "MicroAppDataUsageLogOnMicroAppData", fields: [microAppDataId], references: [id])
  microAppDataId String

  timestamp DateTime @default(now())

  locationLatitude  Float?
  locationLongitude Float?
}
